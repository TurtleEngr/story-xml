Todo
----

Where did I stop?  What is next?

---------------
Add xsltunit tests, for all of the functional template parts.

It looks like I started defining configs with git ini config processing.
This could greatly simplify the formatting definitions:
style-info, def-style, def-content, def-draft, def-print.

---------------
2009-05-09

* Add a man page for fop pkg - point to the installed doc files, and
  the web home.

* Add a man page for story-xml pkg - point to the install doc files,
  and the web home (initiallly moria, the Source Forge).

* To epm pkg, add man page for mkver.  Add a symlink mkver -> mkver.pl

---------------
Huh?
* Convert this to XHTML, with css styles.
* Generate the css styles?  Start with a base template.
* Generate the fo from the xhtml, with the styles...
* Use "filters" with "flags" to generate the final xhtml and fo output.

---------------
* Convert story5 format to story6 (xhtml) format
	- define mapping
* generate epub files

---------------
Simplify things.

* Change:
	<s who-ref="hero">"What?" said the hero.</s>
to:
	<s who="hero">"What?" said the hero.</s>

* Change:
          <t who-ref="hero">Thought text.</t>
to:
          <t who="hero">Thought text.</t>

* Remove alink, vlink, etc.

* Remove all def-img related tags, and replace with <img src=""/>
  Maybe provide some "size" options that could be changed by the "output"
  format?

* Remove all def-link releated tags
  Change <link> to <a>: <a href="">Title</a>

* Format links based on the style defined in output profile:

  <a href="http://foo.com/bar.html">Sample Title</a>
  normal: <a href="http://foo.com/bar.html" target="_blank">Sample Title</a>
  long:   <a href="http://foo.com/bar.html" target="_blank">Sample Title (http://foo.com/bar.html)</a>
  text:   Sample Title (http://foo.com/bar.html)

  <a href="http://foo.com/bar.html" cite="http://www.webcitation.org/6dUN5dw9U">Sample Title</a>
  normal: <a href="http://www.webcitation.org/6dUN5dw9U" target="_blank">Sample Title</a> <a href="http://foo.com/bar.html" target="_blank">(http://foo.com/bar.html)</a>
  long:   <a href="http://www.webcitation.org/6dUN5dw9U" target="_blank">Sample Title (http://www.webcitation.org/6dUN5dw9U)</a> <a href="http://foo.com/bar.html" target="_blank">(http://foo.com/bar.html)</a>
  text:   "Sample Title" [http://foo.com/bar.html or http://www.webcitation.org/6dUN5dw9U]

* Each chapter id is an implied anchor (<a id="$id">Heading</a>

* Simplify the Copyright page formatting. I.e. use "entities" for the
  author, address, etc. And make the copyright formating more a "pre"
  format or regular HTML tags.

* Output a "plain" html conversion.

* css html output

* Get RenderX rendering going

* Get fop rendering going

* Update Serna? The company has been bought, and product discontinued.
  http://www.flatironssolutions.com

  See Free Serna in github

---------------
Dependent User Packages:

Editors:
	vi - standard Linux editor (usually installed)
	emacs - standard Linux editor (usually not installed)
	Editix - optional xml editor (custom package)
	Serna - optional xml editor (custom package)

XSLT Procesors
	xsltproc - standard Linux package (often not installed)
	xsltsaxon - package?
	RenderX - commercial product (free and paid)
	xsltant - commercial product (antenna house) (free and paid)

FO Processors
	FOP - apache (custom package)
	RenderX - commercial product (free and paid)
	xsltant - commercial product (antenna house) (free and paid)

Project
	OpenProj - Libre Project 
	Planner
	MSProject

Other
	tidy

---------------
Dependent Develop Packages

	dtd2xs - comes with Serna
	livedtd - custom package
	m4 ?
	epm - custom package

---------------
Getting Serna installed. 32bit version:

If on a 64bit Linux, first get 32bit versions installed:
	Source: http://askubuntu.com/questions/454253/how-to-run-32-bit-app-in-ubuntu-64-bit
	http://www.webcitation.org/6e3AY8Bjp
	sudo -s
	dpkg --add-architecture i386
	echo "foreign-architecture i386" > /etc/dpkg/dpkg.cfg.d/multiarch
	apt-get update
	apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386
	apt-get install libxmu6:i386

cp serna-free-4.2.0-20090714.tgz ~/tmp
cd tmp
sudo -s
tar -xzf serna-free-4.2.0-20090714.tgz
cd serna-4.2
./install.sh
#Install at /opt/serna
	
---------------

* the multi-ch output needs a lot of re-work.

* Move @draft and @debug from def-style to def-content.
  - actually, remove @draft,  Leave @debug, and make it
    toggle message output.

* Remove pre-fmt (only pre is needed) - find out if this is true.
  Found: convert-2to3.xsl:Change: pre elements to pre-fmt in non-thread sections.
  Find out why.

* Get RenderX working better:

	* The Courier font is proportional.  Type in spec file? - done
	* The Copyright page flows into the next pages. - done
	* Images are indented rather than being left justified.
	* Document the changes needed to get fonts embedded.  Setup
	  scripts which can hook up all the configurations needed.

* Fix links in pdf file.  Also, (maybe url shouldn't always be in ().

* img - inline or flow
  html flow: align="left" style="margin: 1em"

* Fix serna display of start/end dates, add def-when

* Get the chapter file output mode working.

* Take time valued from planner, and replace the times in the story

* Clean up the Serna publish targets (pdf, ps, html, docbook, text)

	* Modularize the template file: different story templates, and
	  differenct publish backends

* Get it running with newer Serna versions

* Get this running in editix (i.e. with schema)

* Clean up the docbook print

* Fix up the def-content, def-draft, and def-print so that values can
  be inherited from a previously defined default set.  This can be
  recursive, but not circular.  Of course this could be simulated with
  entities.

* Publish the tool

	* Create a complete sample book, from a non-copyrighted work.

	* Create a book example with this tool, i.e. a user guide,
	  tutorial, developer guide.  Publish on lulu.

	* Put tool in sourceforge? (GNU license?)

	* Submit tool to SynText (Serna)

	* Submit tool to Lulu (show how it can be used with Serna and editix)
	  Show how it can output Docbook

* Add footnote support.

      * html style: end of chapter, or end of book (after epilog)
      * pdf style: end of page, end of chapter, or end of book

* Add "Part I", "Part II", ... or "Book 1", "Book 2", ... headings?
(This can be simulated with a chapter)

* Try to get &#160; working, rather than indent, just in case
browsers don't implement indent.  Actually provide the nbsp and br
tag as a fmt option for browsers that don't use css.

<style type="text/css">
    <!--
    body {
	text-align: justify;
	margin:     5%;
    }
    P { 
	text-indent:   2em;
        margin-top:    .1em;
        margin-bottom: .1em;
    }
    H1,H2,H3,H4,H5,H6 {
	text-align: left;
	margin:     5%;
    }
    PRE {
	font-size:   90%;
	margin-left: 5%;
    }
    .indent {
	text-indent:   2em;
        margin-top:    .1em;
        margin-bottom: .1em;
    }
    // -->
</style>

<p class="indent"></p>

--------------
pdf: "rev"
    <xsl:choose>
      <xsl:when test="@revision-flag='changed'">
	<!-- if draft: ?, blue, else just text. FIX -->
	<fo:inline text-decoration="underline"
		   color="blue">
	  <xsl:apply-templates />
	</fo:inline>
      </xsl:when>
      <xsl:when test="@revision-flag='added'">
	<!-- if draft: underine, green, else just text. FIX -->
	<fo:inline text-decoration="underline"
		   color="green">
	  <xsl:apply-templates />
	</fo:inline>
      </xsl:when>
      <xsl:when test="@revision-flag='deleted'">
	<!-- if draft: strike, red, else no output FIX -->
	<fo:inline text-decoration="line-through"
		   color="red">
	  <xsl:apply-templates />
	</fo:inline>
      </xsl:when>
    </xsl:choose>

=======================================================
DONE

* Get timeline working completely (there's a bug with duration) - done

* Graph the timeline--import into planner project? - done

* Put all "who" and "where" ids in timeline for each "when" period
  (optional, and filter?) - done

* Are there draft filters for just listing the who and where ids, or
  the who and where ids and descriptions? - yes

* Get draft HTML ouput working. - done

* Apply the paragraph style with css, for html?  Done.

